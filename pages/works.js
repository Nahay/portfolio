import { Fragment } from 'react';
import Image from 'next/future/image';
import { createUseStyles } from 'react-jss';
import Separation from '@components/Separation';
import { t } from 'contexts/Utils';
import worksList from '../public/static/worksList.json';

const useStyle = createUseStyles({
    container: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',

        '& > h1': {
            fontSize: 'calc(10vw + 10px)',
            fontWeight: 'lighter',
            marginBottom: 50,
        },
    },
});

const Works = ({ lang }) => {
    const classes = useStyle();
    // const translations = t('works', lang);

    const Work = ({ opt }) => {
        const { img, title, desc, techs, github, url } = opt;

        return (
            <div className={classes.work}>
                <Image src={img} alt={title} width="200" height="120" className="bnw" />
                <span>{title}</span>
                <p>{desc}</p>
                <div className={classes.workFooter}>
                    {techs.map(e => <span>{e}</span>)}
                    <div>
                        <a href={github} target="_blank" rel="noopener noreferrer">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512">
                            <path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z" />
                            </svg>
                        </a>
                        <a href={url} target="_blank" rel="noopener noreferrer">
                            <svg width="11" height="10" viewBox="0 0 11 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" clipRule="evenodd" d="M6.76407 0.06716C6.69729 0.111297 6.67949 0.161481 6.70487 0.233804L6.74121 0.337314H8.50192C9.87775 0.337314 10.2627 0.35036 10.2627 0.396972C10.2627 0.429777 8.84072 1.74203 7.10276 3.3131C4.8877 5.31545 3.94283 6.20009 3.94283 6.27175C3.94283 6.39183 4.07139 6.45006 4.19679 6.38687C4.2454 6.36235 5.70712 5.05539 7.44508 3.48246L10.605 0.622608L10.6313 2.31981C10.6549 3.83574 10.667 4.02229 10.7454 4.067C10.8091 4.10328 10.8561 4.0998 10.9166 4.05443C10.9902 3.9992 11 3.76342 11 2.04722C11 0.173384 10.9963 0.100822 10.8981 0.0533047C10.7343 -0.0259703 6.88546 -0.0130672 6.76407 0.06716ZM0.720499 1.47749C0.46781 1.52196 0.188157 1.7176 0.078402 1.92676C-0.00101744 2.07808 -0.00770589 2.42765 0.00514448 5.77415L0.0192588 9.45512L0.168302 9.63129C0.250302 9.72813 0.417778 9.85136 0.540436 9.90506C0.759419 10.0009 0.834836 10.0026 4.68363 9.99905C7.58865 9.99638 8.64881 9.98067 8.77789 9.93839C9.01857 9.85954 9.30407 9.59453 9.37001 9.3888C9.40461 9.28096 9.41925 8.67694 9.4094 7.76488L9.3937 6.31269L9.24887 6.29765C9.16924 6.28936 9.09925 6.28936 9.09341 6.29765C9.08756 6.30593 9.06981 6.99074 9.05391 7.81949C9.02673 9.23882 9.01894 9.33247 8.91972 9.43298C8.6833 9.67248 8.73765 9.66938 4.72133 9.6691C2.2488 9.66895 0.898877 9.65167 0.767003 9.61858C0.632442 9.58482 0.533168 9.5185 0.464387 9.41651C0.365376 9.26972 0.361953 9.14688 0.361795 5.72706C0.361584 1.90253 0.354843 1.99704 0.638604 1.85044C0.725502 1.80554 1.18227 1.78555 2.3724 1.7745C4.10457 1.75845 4.17846 1.74769 4.04995 1.53068C3.99313 1.43464 3.95689 1.43255 2.45319 1.43788C1.60696 1.44088 0.827252 1.45873 0.720499 1.47749Z" fill="white"/></svg>
                        </a>
                    </div>
                </div>
            </div>
        )
    }

    return (
        <div className={classes.container}>
            <h1>WORKS</h1>
            {Object.values(worksList)[0].map((work, i) =>
            <Fragment key={i}>
                <Work opt={work} />
                {i !== worksList.length-1 && <Separation/>}
            </Fragment>
            )}
        </div>
    );
};

export default Works;
